<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="io.vitess.dao.MqSoPromotionLogDao">
    <resultMap id="TmqSoPromotionLogResult" type="io.vitess.model.MqSoPromotionLog">
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="tmqSoPromotionLogColumns">
        <![CDATA[
	        	ID as id,
	        	PLATFORM_LINE_ID as platformLineId,
	        	PROMOTION_NAME as promotionName,
	        	GIFT_ITEM_NAME as giftItemName,
	        	GIFT_ITEM_ID as giftItemId,
	        	DISCOUNT_FEE as discountFee,
	        	GIFT_ITEM_NUM as giftItemNum,
	        	PLATFORM_ORDER_CODE as platformOrderCode,
	        	VERSION as version,
	        	SO_LINE_LOG_ID as soLineLogId,
	        	SO_LOG_ID as soLogId,
	        	DESCRIPTION as description,
	        	PROMOTION_ID as promotionId,
	        	SCOPE_TYPE as scopeType,
	        	SHOP_ID as shopId
	    ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" parameterType="io.vitess.model.MqSoPromotionLog"

            flushCache="true">
        <![CDATA[
		        INSERT INTO
		        t_mq_so_promotion_log (
		        id,
		        	PLATFORM_LINE_ID ,
		        	PROMOTION_NAME ,
		        	GIFT_ITEM_NAME ,
		        	GIFT_ITEM_ID ,
		        	DISCOUNT_FEE ,
		        	GIFT_ITEM_NUM ,
		        	PLATFORM_ORDER_CODE ,
		        	VERSION ,
		        	SO_LINE_LOG_ID ,
		        	SO_LOG_ID ,
		        	DESCRIPTION ,
		        	PROMOTION_ID ,
		        	SCOPE_TYPE ,
		        	SHOP_ID
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{platformLineId,javaType=Long,jdbcType=BIGINT} ,
		        	#{promotionName,javaType=String,jdbcType=VARCHAR} ,
		        	#{giftItemName,javaType=String,jdbcType=VARCHAR} ,
		        	#{giftItemId,javaType=String,jdbcType=VARCHAR} ,
		        	#{discountFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{giftItemNum,javaType=Integer,jdbcType=INTEGER} ,
		        	#{platformOrderCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{version,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{soLineLogId,javaType=Long,jdbcType=BIGINT} ,
		        	#{soLogId,javaType=Long,jdbcType=BIGINT} ,
		        	#{description,javaType=String,jdbcType=VARCHAR} ,
		        	#{promotionId,javaType=String,jdbcType=VARCHAR} ,
		        	#{scopeType,javaType=Integer,jdbcType=INTEGER} ,
		        	#{shopId,javaType=Long,jdbcType=BIGINT}
		        )
		    ]]>

    </insert>


    <update id="update" parameterType="io.vitess.model.MqSoPromotionLog">
        <![CDATA[
	        UPDATE t_mq_so_promotion_log SET
		        PLATFORM_LINE_ID = #{platformLineId,javaType=Long,jdbcType=BIGINT} ,
		        PROMOTION_NAME = #{promotionName,javaType=String,jdbcType=VARCHAR} ,
		        GIFT_ITEM_NAME = #{giftItemName,javaType=String,jdbcType=VARCHAR} ,
		        GIFT_ITEM_ID = #{giftItemId,javaType=String,jdbcType=VARCHAR} ,
		        DISCOUNT_FEE = #{discountFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        GIFT_ITEM_NUM = #{giftItemNum,javaType=Integer,jdbcType=INTEGER} ,
		        PLATFORM_ORDER_CODE = #{platformOrderCode,javaType=String,jdbcType=VARCHAR} ,
		        VERSION = #{version,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        SO_LINE_LOG_ID = #{soLineLogId,javaType=Long,jdbcType=BIGINT} ,
		        SO_LOG_ID = #{soLogId,javaType=Long,jdbcType=BIGINT} ,
		        DESCRIPTION = #{description,javaType=String,jdbcType=VARCHAR} ,
		        PROMOTION_ID = #{promotionId,javaType=String,jdbcType=VARCHAR} ,
		        SCOPE_TYPE = #{scopeType,javaType=Integer,jdbcType=INTEGER} ,
		        SHOP_ID = #{shopId,javaType=Long,jdbcType=BIGINT}
	        WHERE
		        ID = #{id}
	    ]]>
    </update>
    <delete id="delete" parameterType="java.lang.Long">
        <![CDATA[
	        delete from t_mq_so_promotion_log where
		        ID = #{id}
	    ]]>
    </delete>

    <delete id="deleteByIds" parameterType="list">

        delete from t_mq_so_promotion_log
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}				</foreach>

    </delete>

    <select id="findById" parameterType="java.lang.Long" resultMap="TmqSoPromotionLogResult" flushCache="false">
        select <include refid="tmqSoPromotionLogColumns" />
        <![CDATA[
			    from t_mq_so_promotion_log
		        where
		        ID = #{id}
		    ]]>
    </select>
    <select id="getByIds" parameterType="list"  resultMap="TmqSoPromotionLogResult" flushCache="false">
        select <include refid="tmqSoPromotionLogColumns" />
        from t_mq_so_promotion_log
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}				</foreach>
    </select>
    <sql id="tmqSoPromotionLogDynamicWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>

            <if test="id!=null">
                and ID = #{id}
            </if>

            <if test="platformLineId!=null">
                and PLATFORM_LINE_ID = #{platformLineId}
            </if>

            <if test="promotionName!=null">
                and PROMOTION_NAME = #{promotionName}
            </if>

            <if test="giftItemName!=null">
                and GIFT_ITEM_NAME = #{giftItemName}
            </if>

            <if test="giftItemId!=null">
                and GIFT_ITEM_ID = #{giftItemId}
            </if>

            <if test="discountFee!=null">
                and DISCOUNT_FEE = #{discountFee}
            </if>

            <if test="giftItemNum!=null">
                and GIFT_ITEM_NUM = #{giftItemNum}
            </if>

            <if test="platformOrderCode!=null">
                and PLATFORM_ORDER_CODE = #{platformOrderCode}
            </if>

            <if test="version!=null">
                and VERSION = #{version}
            </if>

            <if test="soLineLogId!=null">
                and SO_LINE_LOG_ID = #{soLineLogId}
            </if>

            <if test="soLogId!=null">
                and SO_LOG_ID = #{soLogId}
            </if>

            <if test="description!=null">
                and DESCRIPTION = #{description}
            </if>

            <if test="promotionId!=null">
                and PROMOTION_ID = #{promotionId}
            </if>

            <if test="scopeType!=null">
                and SCOPE_TYPE = #{scopeType}
            </if>

            <if test="shopId!=null">
                and SHOP_ID = #{shopId}
            </if>
        </where>
    </sql>


    <select id="getCount" resultType="long">
        select count(*) from t_mq_so_promotion_log
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_mq_so_promotion_log
        <include refid="tmqSoPromotionLogDynamicWhere"/>
    </select>

    <select id="findListCountByParam" resultType="long">
        select count(*) from t_mq_so_promotion_log
        <include refid="tmqSoPromotionLogDynamicWhere"/>
    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="TmqSoPromotionLogResult">
        select <include refid="tmqSoPromotionLogColumns" />
        from t_mq_so_promotion_log
        <include refid="tmqSoPromotionLogDynamicWhere"/>

    </select>

    <select id="findListByQueryMap" resultMap="TmqSoPromotionLogResult">
        select <include refid="tmqSoPromotionLogColumns" />
        from t_mq_so_promotion_log
        <include refid="tmqSoPromotionLogDynamicWhere"/>

    </select>

    <select id="findListByParam" resultMap="TmqSoPromotionLogResult">
        select <include refid="tmqSoPromotionLogColumns" />
        from t_mq_so_promotion_log
        <include refid="tmqSoPromotionLogDynamicWhere"/>

    </select>


</mapper>
