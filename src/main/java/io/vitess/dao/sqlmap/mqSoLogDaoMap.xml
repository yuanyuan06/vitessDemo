<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="io.vitess.dao.MqSoLogDao">
    <resultMap id="TmqSoLogResult" type="io.vitess.model.MqSoLog">
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="tmqSoLogColumns">
        <![CDATA[
	        	id as id,
	        	version as version,
	        	shop_id as shopId,
	        	code as code,
	        	create_time as createTime,
	        	outer_create_time as outerCreateTime,
	        	payment_time as paymentTime,
	        	is_needed_invoice as isNeededInvoice,
	        	invoice_title as invoiceTitle,
	        	invoice_content as invoiceContent,
	        	total_actual as totalActual,
	        	remark as remark,
	        	error_msg as errorMsg,
	        	status as status,
	        	delivery_remark as deliveryRemark,
	        	is_member_order as isMemberOrder,
	        	is_needed_packing as isNeededPacking,
	        	source as source,
	        	total_outer_point as totalOuterPoint,
	        	total_inner_point as totalInnerPoint,
	        	total_vc as totalVc,
	        	ext_prop1 as extProp1,
	        	platform_order_type as platformOrderType,
	        	seller_memo as sellerMemo,
	        	platform_order_status as platformOrderStatus,
	        	platform_type as platformType,
	        	direction as direction,
	        	msg_batch_id as msgBatchId,
	        	store_code as storeCode,
	        	service_item_fee as serviceItemFee,
	        	slip_code1 as slipCode1,
	        	slip_code2 as slipCode2,
	        	error_count as errorCount,
	        	pay_discount as payDiscount,
	        	total_discount as totalDiscount,
	        	is_platform_delivery as isPlatformDelivery,
	        	cod_amt as codAmt,
	        	special_type as specialType,
	        	ext_vc1 as extVc1,
	        	ext_vc2 as extVc2,
	        	ext_vc3 as extVc3,
	        	ALIPAY_ID as alipayId,
	        	CREDIT_CARD_FEE as creditCardFee,
	        	no_pay_status as noPayStatus,
	        	ORDER_TAX_FEE as orderTaxFee,
	        	IS_BUNDLE as isBundle,
	        	CUSTOMIZATION_MEMO as customizationMemo,
	        	CROSS_BONDED_DECLARE as crossBondedDeclare,
	        	OMNICHANNEL_PARAM as omnichannelParam
	    ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" parameterType="io.vitess.model.MqSoLog"

            flushCache="true">
        <![CDATA[
		        INSERT INTO
		        t_mq_so_log (
		        id,
version ,
shop_id ,
code ,
create_time ,
outer_create_time ,
payment_time ,
is_needed_invoice ,
invoice_title ,
invoice_content ,
total_actual ,
remark ,
error_msg ,
status ,
delivery_remark ,
is_member_order ,
is_needed_packing ,
source ,
total_outer_point ,
total_inner_point ,
total_vc ,
ext_prop1 ,
platform_order_type ,
seller_memo ,
platform_order_status ,
platform_type ,
direction ,
msg_batch_id ,
store_code ,
service_item_fee ,
slip_code1 ,
slip_code2 ,
error_count ,
pay_discount ,
total_discount ,
is_platform_delivery ,
cod_amt ,
special_type ,
ext_vc1 ,
ext_vc2 ,
ext_vc3 ,
ALIPAY_ID ,
CREDIT_CARD_FEE ,
no_pay_status ,
ORDER_TAX_FEE ,
IS_BUNDLE ,
CUSTOMIZATION_MEMO ,
CROSS_BONDED_DECLARE ,
OMNICHANNEL_PARAM
		        ) VALUES (
		            #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{version,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{shopId,javaType=Long,jdbcType=BIGINT} ,
                    #{code,javaType=String,jdbcType=VARCHAR} ,
                    #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{outerCreateTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{paymentTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{isNeededInvoice,javaType=Integer,jdbcType=INTEGER} ,
                    #{invoiceTitle,javaType=String,jdbcType=VARCHAR} ,
                    #{invoiceContent,javaType=String,jdbcType=VARCHAR} ,
                    #{totalActual,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{remark,javaType=String,jdbcType=VARCHAR} ,
                    #{errorMsg,javaType=String,jdbcType=VARCHAR} ,
                    #{status,javaType=Integer,jdbcType=INTEGER} ,
                    #{deliveryRemark,javaType=String,jdbcType=VARCHAR} ,
                    #{isMemberOrder,javaType=Integer,jdbcType=INTEGER} ,
                    #{isNeededPacking,javaType=Integer,jdbcType=INTEGER} ,
                    #{source,javaType=String,jdbcType=VARCHAR} ,
                    #{totalOuterPoint,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{totalInnerPoint,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{totalVc,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{extProp1,javaType=String,jdbcType=VARCHAR} ,
                    #{platformOrderType,javaType=String,jdbcType=VARCHAR} ,
                    #{sellerMemo,javaType=String,jdbcType=VARCHAR} ,
                    #{platformOrderStatus,javaType=String,jdbcType=VARCHAR} ,
                    #{platformType,javaType=Integer,jdbcType=INTEGER} ,
                    #{direction,javaType=Integer,jdbcType=INTEGER} ,
                    #{msgBatchId,javaType=Long,jdbcType=BIGINT} ,
                    #{storeCode,javaType=String,jdbcType=VARCHAR} ,
                    #{serviceItemFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{slipCode1,javaType=String,jdbcType=VARCHAR} ,
                    #{slipCode2,javaType=String,jdbcType=VARCHAR} ,
                    #{errorCount,javaType=Integer,jdbcType=INTEGER} ,
                    #{payDiscount,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{totalDiscount,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{isPlatformDelivery,javaType=Integer,jdbcType=INTEGER} ,
                    #{codAmt,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{specialType,javaType=Integer,jdbcType=INTEGER} ,
                    #{extVc1,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{extVc2,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{extVc3,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{alipayId,javaType=Long,jdbcType=BIGINT} ,
                    #{creditCardFee,javaType=String,jdbcType=VARCHAR} ,
                    #{noPayStatus,javaType=Integer,jdbcType=TINYINT} ,
                    #{orderTaxFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
                    #{isBundle,javaType=Boolean,jdbcType=BIT} ,
                    #{customizationMemo,javaType=String,jdbcType=VARCHAR} ,
                    #{crossBondedDeclare,javaType=Boolean,jdbcType=BIT} ,
                    #{omnichannelParam,javaType=String,jdbcType=VARCHAR}
		        )
		    ]]>

    </insert>


    <update id="update" parameterType="io.vitess.model.MqSoLog">
        <![CDATA[
	        UPDATE t_mq_so_log SET
		        version = #{version,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        shop_id = #{shopId,javaType=Long,jdbcType=BIGINT} ,
		        code = #{code,javaType=String,jdbcType=VARCHAR} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        outer_create_time = #{outerCreateTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        payment_time = #{paymentTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        is_needed_invoice = #{isNeededInvoice,javaType=Integer,jdbcType=INTEGER} ,
		        invoice_title = #{invoiceTitle,javaType=String,jdbcType=VARCHAR} ,
		        invoice_content = #{invoiceContent,javaType=String,jdbcType=VARCHAR} ,
		        total_actual = #{totalActual,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        remark = #{remark,javaType=String,jdbcType=VARCHAR} ,
		        error_msg = #{errorMsg,javaType=String,jdbcType=VARCHAR} ,
		        status = #{status,javaType=Integer,jdbcType=INTEGER} ,
		        delivery_remark = #{deliveryRemark,javaType=String,jdbcType=VARCHAR} ,
		        is_member_order = #{isMemberOrder,javaType=Integer,jdbcType=INTEGER} ,
		        is_needed_packing = #{isNeededPacking,javaType=Integer,jdbcType=INTEGER} ,
		        source = #{source,javaType=String,jdbcType=VARCHAR} ,
		        total_point_used = #{totalPointUsed,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        total_outer_point = #{totalOuterPoint,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        total_inner_point = #{totalInnerPoint,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        total_vc = #{totalVc,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        ext_prop1 = #{extProp1,javaType=String,jdbcType=VARCHAR} ,
		        platform_order_type = #{platformOrderType,javaType=String,jdbcType=VARCHAR} ,
		        seller_memo = #{sellerMemo,javaType=String,jdbcType=VARCHAR} ,
		        platform_order_status = #{platformOrderStatus,javaType=String,jdbcType=VARCHAR} ,
		        platform_type = #{platformType,javaType=Integer,jdbcType=INTEGER} ,
		        direction = #{direction,javaType=Integer,jdbcType=INTEGER} ,
		        msg_batch_id = #{msgBatchId,javaType=Long,jdbcType=BIGINT} ,
		        store_code = #{storeCode,javaType=String,jdbcType=VARCHAR} ,
		        service_item_fee = #{serviceItemFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        slip_code1 = #{slipCode1,javaType=String,jdbcType=VARCHAR} ,
		        slip_code2 = #{slipCode2,javaType=String,jdbcType=VARCHAR} ,
		        error_count = #{errorCount,javaType=Integer,jdbcType=INTEGER} ,
		        pay_discount = #{payDiscount,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        total_discount = #{totalDiscount,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        is_platform_delivery = #{isPlatformDelivery,javaType=Integer,jdbcType=INTEGER} ,
		        cod_amt = #{codAmt,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        special_type = #{specialType,javaType=Integer,jdbcType=INTEGER} ,
		        ext_vc1 = #{extVc1,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        ext_vc2 = #{extVc2,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        ext_vc3 = #{extVc3,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        ALIPAY_ID = #{alipayId,javaType=Long,jdbcType=BIGINT} ,
		        CREDIT_CARD_FEE = #{creditCardFee,javaType=String,jdbcType=VARCHAR} ,
		        no_pay_status = #{noPayStatus,javaType=Integer,jdbcType=TINYINT} ,
		        ORDER_TAX_FEE = #{orderTaxFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        IS_BUNDLE = #{isBundle,javaType=Boolean,jdbcType=BIT} ,
		        CUSTOMIZATION_MEMO = #{customizationMemo,javaType=String,jdbcType=VARCHAR} ,
		        CROSS_BONDED_DECLARE = #{crossBondedDeclare,javaType=Boolean,jdbcType=BIT} ,
		        OMNICHANNEL_PARAM = #{omnichannelParam,javaType=String,jdbcType=VARCHAR}
	        WHERE
		        id = #{id}
	    ]]>
    </update>
    <delete id="delete" parameterType="java.lang.Long">
        <![CDATA[
	        delete from t_mq_so_log where
		        id = #{id}
	    ]]>
    </delete>

    <delete id="deleteByIds" parameterType="list">

        delete from t_mq_so_log
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}				</foreach>

    </delete>

    <select id="findById" parameterType="java.lang.Long" resultMap="TmqSoLogResult" flushCache="false">
        select <include refid="tmqSoLogColumns" />
        <![CDATA[
			    from t_mq_so_log
		        where
		        id = #{id}
		    ]]>
    </select>
    <select id="getByIds" parameterType="list"  resultMap="TmqSoLogResult" flushCache="false">
        select <include refid="tmqSoLogColumns" />
        from t_mq_so_log
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}				</foreach>
    </select>
    <sql id="tmqSoLogDynamicWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>

            <if test="id!=null">
                and id = #{id}
            </if>

            <if test="version!=null">
                and version = #{version}
            </if>

            <if test="shopId!=null">
                and shop_id = #{shopId}
            </if>

            <if test="code!=null">
                and code = #{code}
            </if>

            <if test="createTime!=null">
                and create_time = #{createTime}
            </if>

            <if test="outerCreateTime!=null">
                and outer_create_time = #{outerCreateTime}
            </if>

            <if test="paymentTime!=null">
                and payment_time = #{paymentTime}
            </if>



            <if test="isNeededInvoice!=null">
                and is_needed_invoice = #{isNeededInvoice}
            </if>

            <if test="invoiceTitle!=null">
                and invoice_title = #{invoiceTitle}
            </if>

            <if test="invoiceContent!=null">
                and invoice_content = #{invoiceContent}
            </if>



            <if test="totalActual!=null">
                and total_actual = #{totalActual}
            </if>

            <if test="remark!=null">
                and remark = #{remark}
            </if>

            <if test="errorMsg!=null">
                and error_msg = #{errorMsg}
            </if>

            <if test="status!=null">
                and status = #{status}
            </if>


            <if test="deliveryRemark!=null">
                and delivery_remark = #{deliveryRemark}
            </if>

            <if test="isMemberOrder!=null">
                and is_member_order = #{isMemberOrder}
            </if>

            <if test="isNeededPacking!=null">
                and is_needed_packing = #{isNeededPacking}
            </if>
            <if test="source!=null">
                and source = #{source}
            </if>

            <if test="totalOuterPoint!=null">
                and total_outer_point = #{totalOuterPoint}
            </if>

            <if test="totalInnerPoint!=null">
                and total_inner_point = #{totalInnerPoint}
            </if>

            <if test="totalVc!=null">
                and total_vc = #{totalVc}
            </if>

            <if test="extProp1!=null">
                and ext_prop1 = #{extProp1}
            </if>

            <if test="platformOrderType!=null">
                and platform_order_type = #{platformOrderType}
            </if>

            <if test="sellerMemo!=null">
                and seller_memo = #{sellerMemo}
            </if>
            <if test="platformOrderStatus!=null">
                and platform_order_status = #{platformOrderStatus}
            </if>

            <if test="platformType!=null">
                and platform_type = #{platformType}
            </if>
            <if test="direction!=null">
                and direction = #{direction}
            </if>

            <if test="msgBatchId!=null">
                and msg_batch_id = #{msgBatchId}
            </if>

            <if test="storeCode!=null">
                and store_code = #{storeCode}
            </if>

            <if test="serviceItemFee!=null">
                and service_item_fee = #{serviceItemFee}
            </if>

            <if test="slipCode1!=null">
                and slip_code1 = #{slipCode1}
            </if>

            <if test="slipCode2!=null">
                and slip_code2 = #{slipCode2}
            </if>

            <if test="errorCount!=null">
                and error_count = #{errorCount}
            </if>

            <if test="payDiscount!=null">
                and pay_discount = #{payDiscount}
            </if>

            <if test="totalDiscount!=null">
                and total_discount = #{totalDiscount}
            </if>
            <if test="isPlatformDelivery!=null">
                and is_platform_delivery = #{isPlatformDelivery}
            </if>

            <if test="codAmt!=null">
                and cod_amt = #{codAmt}
            </if>

            <if test="specialType!=null">
                and special_type = #{specialType}
            </if>

            <if test="extVc1!=null">
                and ext_vc1 = #{extVc1}
            </if>

            <if test="extVc2!=null">
                and ext_vc2 = #{extVc2}
            </if>

            <if test="extVc3!=null">
                and ext_vc3 = #{extVc3}
            </if>

            <if test="alipayId!=null">
                and ALIPAY_ID = #{alipayId}
            </if>

            <if test="creditCardFee!=null">
                and CREDIT_CARD_FEE = #{creditCardFee}
            </if>

            <if test="noPayStatus!=null">
                and no_pay_status = #{noPayStatus}
            </if>

            <if test="orderTaxFee!=null">
                and ORDER_TAX_FEE = #{orderTaxFee}
            </if>

            <if test="isBundle!=null">
                and IS_BUNDLE = #{isBundle}
            </if>

            <if test="customizationMemo!=null">
                and CUSTOMIZATION_MEMO = #{customizationMemo}
            </if>

            <if test="crossBondedDeclare!=null">
                and CROSS_BONDED_DECLARE = #{crossBondedDeclare}
            </if>

            <if test="omnichannelParam!=null">
                and OMNICHANNEL_PARAM = #{omnichannelParam}
            </if>
        </where>
    </sql>


    <select id="getCount" resultType="long">
        select count(*) from t_mq_so_log
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_mq_so_log
        <include refid="tmqSoLogDynamicWhere"/>
    </select>

    <select id="findListCountByParam" resultType="long">
        select count(*) from t_mq_so_log
        <include refid="tmqSoLogDynamicWhere"/>
    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="TmqSoLogResult">
        select <include refid="tmqSoLogColumns" />
        from t_mq_so_log
        <include refid="tmqSoLogDynamicWhere"/>

    </select>

    <select id="findListByQueryMap" resultMap="TmqSoLogResult">
        select <include refid="tmqSoLogColumns" />
        from t_mq_so_log
        <include refid="tmqSoLogDynamicWhere"/>

    </select>

    <select id="findListByParam" resultMap="TmqSoLogResult">
        select <include refid="tmqSoLogColumns" />
        from t_mq_so_log
        <include refid="tmqSoLogDynamicWhere"/>

    </select>


</mapper>
