<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="io.vitess.dao.MqSoLineLogDao">
    <resultMap id="TmqSoLineLogResult" type="io.vitess.model.MqSoLineLog">
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="tmqSoLineLogColumns">
        <![CDATA[
	        	id as id,
	        	version as version,
	        	jmsku_code as jmskuCode,
	        	bar_code as barCode,
	        	qty as qty,
	        	unit_price as unitPrice,
	        	total_actual as totalActual,
	        	so_log_id as soLogId,
	        	sku_combo_remark as skuComboRemark,
	        	extention_code as extentionCode,
	        	list_price as listPrice,
	        	md_price as mdPrice,
	        	coupon_code as couponCode,
	        	discount_fee as discountFee,
	        	line_total as lineTotal,
	        	line_unit_price as lineUnitPrice,
	        	final_total_actual as finalTotalActual,
	        	final_unit_price as finalUnitPrice,
	        	total_point_used as totalPointUsed,
	        	ext_prop1 as extProp1,
	        	platform_line_id as platformLineId,
	        	outer_point_value as outerPointValue,
	        	inner_point_value as innerPointValue,
	        	other_vc as otherVc,
	        	platform_source as platformSource,
	        	platform_sku_name as platformSkuName,
	        	warranty_months as warrantyMonths,
	        	platform_wh_code as platformWhCode,
	        	is_prezzie as isPrezzie,
	        	EST_CON_TIME as estConTime,
	        	PIC_PATH as picPath,
	        	SHOP_ID as shopId,
	        	SUB_ORDER_TAX_FEE as subOrderTaxFee,
	        	ASSEMBLY_RELA as assemblyRela,
	        	PART_MJZ_DISCOUNT as partMjzDiscount,
	        	TOTAL_FEE as totalFee,
	        	targetCode as targetCode,
	        	TARGET_CODE as targetCode,
	        	TARGET_TYPE as targetType,
	        	ALLOCATION_CODE as allocationCode,
	        	FQG_NUM as fqgNum,
	        	IS_FQG_S_FEE as isFqgSfee,
	        	ALLOCATION_TYPE as allocationType,
	        	PLATFORM_SKU_ID as platformSkuId,
	        	COUPON_FEE as couponFee
	    ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" parameterType="io.vitess.model.MqSoLineLog"

            flushCache="true">
        <![CDATA[
		        INSERT INTO
		        t_mq_so_line_log (
		        id,
		        	version ,
		        	jmsku_code ,
		        	bar_code ,
		        	qty ,
		        	unit_price ,
		        	total_actual ,
		        	so_log_id ,
		        	sku_combo_remark ,
		        	extention_code ,
		        	list_price ,
		        	md_price ,
		        	coupon_code ,
		        	discount_fee ,
		        	line_total ,
		        	line_unit_price ,
		        	final_total_actual ,
		        	final_unit_price ,
		        	total_point_used ,
		        	ext_prop1 ,
		        	platform_line_id ,
		        	outer_point_value ,
		        	inner_point_value ,
		        	other_vc ,
		        	platform_source ,
		        	platform_sku_name ,
		        	warranty_months ,
		        	platform_wh_code ,
		        	is_prezzie ,
		        	EST_CON_TIME ,
		        	PIC_PATH ,
		        	SHOP_ID ,
		        	SUB_ORDER_TAX_FEE ,
		        	ASSEMBLY_RELA ,
		        	PART_MJZ_DISCOUNT ,
		        	TOTAL_FEE ,
		        	targetCode ,
		        	TARGET_CODE ,
		        	TARGET_TYPE ,
		        	ALLOCATION_CODE ,
		        	FQG_NUM ,
		        	IS_FQG_S_FEE ,
		        	ALLOCATION_TYPE ,
		        	PLATFORM_SKU_ID ,
		        	COUPON_FEE
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{version,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{jmskuCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{barCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{qty,javaType=Integer,jdbcType=INTEGER} ,
		        	#{unitPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{totalActual,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{soLogId,javaType=Long,jdbcType=BIGINT} ,
		        	#{skuComboRemark,javaType=String,jdbcType=VARCHAR} ,
		        	#{extentionCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{listPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{mdPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{couponCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{discountFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{lineTotal,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{lineUnitPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{finalTotalActual,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{finalUnitPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{totalPointUsed,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{extProp1,javaType=String,jdbcType=VARCHAR} ,
		        	#{platformLineId,javaType=String,jdbcType=VARCHAR} ,
		        	#{outerPointValue,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{innerPointValue,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{otherVc,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{platformSource,javaType=String,jdbcType=VARCHAR} ,
		        	#{platformSkuName,javaType=String,jdbcType=VARCHAR} ,
		        	#{warrantyMonths,javaType=Integer,jdbcType=INTEGER} ,
		        	#{platformWhCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{isPrezzie,javaType=Integer,jdbcType=INTEGER} ,
		        	#{estConTime,javaType=String,jdbcType=VARCHAR} ,
		        	#{picPath,javaType=String,jdbcType=VARCHAR} ,
		        	#{shopId,javaType=Long,jdbcType=BIGINT} ,
		        	#{subOrderTaxFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{assemblyRela,javaType=Long,jdbcType=BIGINT} ,
		        	#{partMjzDiscount,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{totalFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{targetCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{targetCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{targetType,javaType=String,jdbcType=VARCHAR} ,
		        	#{allocationCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{fqgNum,javaType=Integer,jdbcType=INTEGER} ,
		        	#{isFqgSfee,javaType=Integer,jdbcType=INTEGER} ,
		        	#{allocationType,javaType=String,jdbcType=VARCHAR} ,
		        	#{platformSkuId,javaType=Long,jdbcType=BIGINT} ,
		        	#{couponFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL}
		        )
		    ]]>

    </insert>


    <update id="update" parameterType="io.vitess.model.MqSoLineLog">
        <![CDATA[
	        UPDATE t_mq_so_line_log SET
		        version = #{version,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        jmsku_code = #{jmskuCode,javaType=String,jdbcType=VARCHAR} ,
		        bar_code = #{barCode,javaType=String,jdbcType=VARCHAR} ,
		        qty = #{qty,javaType=Integer,jdbcType=INTEGER} ,
		        unit_price = #{unitPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        total_actual = #{totalActual,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        so_log_id = #{soLogId,javaType=Long,jdbcType=BIGINT} ,
		        sku_combo_remark = #{skuComboRemark,javaType=String,jdbcType=VARCHAR} ,
		        extention_code = #{extentionCode,javaType=String,jdbcType=VARCHAR} ,
		        list_price = #{listPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        md_price = #{mdPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        coupon_code = #{couponCode,javaType=String,jdbcType=VARCHAR} ,
		        discount_fee = #{discountFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        line_total = #{lineTotal,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        line_unit_price = #{lineUnitPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        final_total_actual = #{finalTotalActual,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        final_unit_price = #{finalUnitPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        total_point_used = #{totalPointUsed,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        ext_prop1 = #{extProp1,javaType=String,jdbcType=VARCHAR} ,
		        platform_line_id = #{platformLineId,javaType=String,jdbcType=VARCHAR} ,
		        outer_point_value = #{outerPointValue,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        inner_point_value = #{innerPointValue,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        other_vc = #{otherVc,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        platform_source = #{platformSource,javaType=String,jdbcType=VARCHAR} ,
		        platform_sku_name = #{platformSkuName,javaType=String,jdbcType=VARCHAR} ,
		        warranty_months = #{warrantyMonths,javaType=Integer,jdbcType=INTEGER} ,
		        platform_wh_code = #{platformWhCode,javaType=String,jdbcType=VARCHAR} ,
		        is_prezzie = #{isPrezzie,javaType=Integer,jdbcType=INTEGER} ,
		        EST_CON_TIME = #{estConTime,javaType=String,jdbcType=VARCHAR} ,
		        PIC_PATH = #{picPath,javaType=String,jdbcType=VARCHAR} ,
		        SHOP_ID = #{shopId,javaType=Long,jdbcType=BIGINT} ,
		        SUB_ORDER_TAX_FEE = #{subOrderTaxFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        ASSEMBLY_RELA = #{assemblyRela,javaType=Long,jdbcType=BIGINT} ,
		        PART_MJZ_DISCOUNT = #{partMjzDiscount,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        TOTAL_FEE = #{totalFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        targetCode = #{targetCode,javaType=String,jdbcType=VARCHAR} ,
		        TARGET_CODE = #{targetCode,javaType=String,jdbcType=VARCHAR} ,
		        TARGET_TYPE = #{targetType,javaType=String,jdbcType=VARCHAR} ,
		        ALLOCATION_CODE = #{allocationCode,javaType=String,jdbcType=VARCHAR} ,
		        FQG_NUM = #{fqgNum,javaType=Integer,jdbcType=INTEGER} ,
		        IS_FQG_S_FEE = #{isFqgSfee,javaType=Integer,jdbcType=INTEGER} ,
		        ALLOCATION_TYPE = #{allocationType,javaType=String,jdbcType=VARCHAR} ,
		        PLATFORM_SKU_ID = #{platformSkuId,javaType=Long,jdbcType=BIGINT} ,
		        COUPON_FEE = #{couponFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL}
	        WHERE
		        id = #{id}
	    ]]>
    </update>
    <delete id="delete" parameterType="java.lang.Long">
        <![CDATA[
	        delete from t_mq_so_line_log where
		        id = #{id}
	    ]]>
    </delete>

    <delete id="deleteByIds" parameterType="list">

        delete from t_mq_so_line_log
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}				</foreach>

    </delete>

    <select id="findById" parameterType="java.lang.Long" resultMap="TmqSoLineLogResult" flushCache="false">
        select <include refid="tmqSoLineLogColumns" />
        <![CDATA[
			    from t_mq_so_line_log
		        where
		        id = #{id}
		    ]]>
    </select>
    <select id="getByIds" parameterType="list"  resultMap="TmqSoLineLogResult" flushCache="false">
        select <include refid="tmqSoLineLogColumns" />
        from t_mq_so_line_log
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}				</foreach>
    </select>
    <sql id="tmqSoLineLogDynamicWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>

            <if test="id!=null">
                and id = #{id}
            </if>

            <if test="version!=null">
                and version = #{version}
            </if>

            <if test="jmskuCode!=null">
                and jmsku_code = #{jmskuCode}
            </if>

            <if test="barCode!=null">
                and bar_code = #{barCode}
            </if>

            <if test="qty!=null">
                and qty = #{qty}
            </if>

            <if test="unitPrice!=null">
                and unit_price = #{unitPrice}
            </if>

            <if test="totalActual!=null">
                and total_actual = #{totalActual}
            </if>

            <if test="soLogId!=null">
                and so_log_id = #{soLogId}
            </if>

            <if test="skuComboRemark!=null">
                and sku_combo_remark = #{skuComboRemark}
            </if>

            <if test="extentionCode!=null">
                and extention_code = #{extentionCode}
            </if>

            <if test="listPrice!=null">
                and list_price = #{listPrice}
            </if>

            <if test="mdPrice!=null">
                and md_price = #{mdPrice}
            </if>

            <if test="couponCode!=null">
                and coupon_code = #{couponCode}
            </if>

            <if test="discountFee!=null">
                and discount_fee = #{discountFee}
            </if>

            <if test="lineTotal!=null">
                and line_total = #{lineTotal}
            </if>

            <if test="lineUnitPrice!=null">
                and line_unit_price = #{lineUnitPrice}
            </if>

            <if test="finalTotalActual!=null">
                and final_total_actual = #{finalTotalActual}
            </if>

            <if test="finalUnitPrice!=null">
                and final_unit_price = #{finalUnitPrice}
            </if>

            <if test="totalPointUsed!=null">
                and total_point_used = #{totalPointUsed}
            </if>

            <if test="extProp1!=null">
                and ext_prop1 = #{extProp1}
            </if>

            <if test="platformLineId!=null">
                and platform_line_id = #{platformLineId}
            </if>

            <if test="outerPointValue!=null">
                and outer_point_value = #{outerPointValue}
            </if>

            <if test="innerPointValue!=null">
                and inner_point_value = #{innerPointValue}
            </if>

            <if test="otherVc!=null">
                and other_vc = #{otherVc}
            </if>

            <if test="platformSource!=null">
                and platform_source = #{platformSource}
            </if>

            <if test="platformSkuName!=null">
                and platform_sku_name = #{platformSkuName}
            </if>

            <if test="warrantyMonths!=null">
                and warranty_months = #{warrantyMonths}
            </if>

            <if test="platformWhCode!=null">
                and platform_wh_code = #{platformWhCode}
            </if>

            <if test="isPrezzie!=null">
                and is_prezzie = #{isPrezzie}
            </if>

            <if test="estConTime!=null">
                and EST_CON_TIME = #{estConTime}
            </if>

            <if test="picPath!=null">
                and PIC_PATH = #{picPath}
            </if>

            <if test="shopId!=null">
                and SHOP_ID = #{shopId}
            </if>

            <if test="subOrderTaxFee!=null">
                and SUB_ORDER_TAX_FEE = #{subOrderTaxFee}
            </if>

            <if test="assemblyRela!=null">
                and ASSEMBLY_RELA = #{assemblyRela}
            </if>

            <if test="partMjzDiscount!=null">
                and PART_MJZ_DISCOUNT = #{partMjzDiscount}
            </if>

            <if test="totalFee!=null">
                and TOTAL_FEE = #{totalFee}
            </if>

            <if test="targetCode!=null">
                and targetCode = #{targetCode}
            </if>

            <if test="targetCode!=null">
                and TARGET_CODE = #{targetCode}
            </if>

            <if test="targetType!=null">
                and TARGET_TYPE = #{targetType}
            </if>

            <if test="allocationCode!=null">
                and ALLOCATION_CODE = #{allocationCode}
            </if>

            <if test="fqgNum!=null">
                and FQG_NUM = #{fqgNum}
            </if>

            <if test="isFqgSfee!=null">
                and IS_FQG_S_FEE = #{isFqgSfee}
            </if>

            <if test="allocationType!=null">
                and ALLOCATION_TYPE = #{allocationType}
            </if>

            <if test="platformSkuId!=null">
                and PLATFORM_SKU_ID = #{platformSkuId}
            </if>

            <if test="couponFee!=null">
                and COUPON_FEE = #{couponFee}
            </if>
        </where>
    </sql>


    <select id="getCount" resultType="long">
        select count(*) from t_mq_so_line_log
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_mq_so_line_log
        <include refid="tmqSoLineLogDynamicWhere"/>
    </select>

    <select id="findListCountByParam" resultType="long">
        select count(*) from t_mq_so_line_log
        <include refid="tmqSoLineLogDynamicWhere"/>
    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="TmqSoLineLogResult">
        select <include refid="tmqSoLineLogColumns" />
        from t_mq_so_line_log
        <include refid="tmqSoLineLogDynamicWhere"/>

    </select>

    <select id="findListByQueryMap" resultMap="TmqSoLineLogResult">
        select <include refid="tmqSoLineLogColumns" />
        from t_mq_so_line_log
        <include refid="tmqSoLineLogDynamicWhere"/>

    </select>

    <select id="findListByParam" resultMap="TmqSoLineLogResult">
        select <include refid="tmqSoLineLogColumns" />
        from t_mq_so_line_log
        <include refid="tmqSoLineLogDynamicWhere"/>

    </select>


</mapper>
