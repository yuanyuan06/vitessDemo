<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="io.vitess.dao.sqlmap.TtdSalesOneByOneToWhDao">
	<resultMap id="TtdSalesOneByOneToWhResult" type="io.vitess.model.sqlmap.TtdSalesOneByOneToWh">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ttdSalesOneByOneToWhColumns">
	    <![CDATA[
	        	ID as id,
	        	PROCESS_STATUS as processStatus,
	        	PROCESS_RESULT as processResult,
	        	SHOP_ID as shopId,
	        	CREATE_TIME as createTime,
	        	SO_ID as soId,
	        	WAREHOUSE_CODE as warehouseCode,
	        	UPDATE_TIME as updateTime
	    ]]>
	</sql>

		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="io.vitess.model.sqlmap.TtdSalesOneByOneToWh"
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_td_sales_one_by_one_to_wh (
		        id,
		        	PROCESS_STATUS ,
		        	PROCESS_RESULT ,
		        	SHOP_ID ,
		        	CREATE_TIME ,
		        	SO_ID ,
		        	WAREHOUSE_CODE ,
		        	UPDATE_TIME 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{processStatus,javaType=Integer,jdbcType=INTEGER} ,
		        	#{processResult,javaType=String,jdbcType=VARCHAR} ,
		        	#{shopId,javaType=Long,jdbcType=BIGINT} ,
		        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{soId,javaType=Long,jdbcType=BIGINT} ,
		        	#{warehouseCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{updateTime,javaType=java.util.Date,jdbcType=TIMESTAMP} 
		        )
		    ]]>

		</insert>
		

		<update id="update" parameterType="io.vitess.model.sqlmap.TtdSalesOneByOneToWh">
	    <![CDATA[
	        UPDATE t_td_sales_one_by_one_to_wh SET
		        PROCESS_STATUS = #{processStatus,javaType=Integer,jdbcType=INTEGER} ,
		        PROCESS_RESULT = #{processResult,javaType=String,jdbcType=VARCHAR} ,
		        SHOP_ID = #{shopId,javaType=Long,jdbcType=BIGINT} ,
		        CREATE_TIME = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        SO_ID = #{soId,javaType=Long,jdbcType=BIGINT} ,
		        WAREHOUSE_CODE = #{warehouseCode,javaType=String,jdbcType=VARCHAR} ,
		        UPDATE_TIME = #{updateTime,javaType=java.util.Date,jdbcType=TIMESTAMP} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_td_sales_one_by_one_to_wh where
		        ID = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_td_sales_one_by_one_to_wh 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="TtdSalesOneByOneToWhResult" flushCache="false">
			select <include refid="ttdSalesOneByOneToWhColumns" />
		    <![CDATA[
			    from t_td_sales_one_by_one_to_wh 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="TtdSalesOneByOneToWhResult" flushCache="false">
			select <include refid="ttdSalesOneByOneToWhColumns" />
			    from t_td_sales_one_by_one_to_wh 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="ttdSalesOneByOneToWhDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and ID = #{id}
				</if>
	       
				<if test="processStatus!=null">
					and PROCESS_STATUS = #{processStatus}
				</if>
	       
				<if test="processResult!=null">
					and PROCESS_RESULT = #{processResult}
				</if>
	       
				<if test="shopId!=null">
					and SHOP_ID = #{shopId}
				</if>
	       
				<if test="createTime!=null">
					and CREATE_TIME = #{createTime}
				</if>
	       
				<if test="soId!=null">
					and SO_ID = #{soId}
				</if>
	       
				<if test="warehouseCode!=null">
					and WAREHOUSE_CODE = #{warehouseCode}
				</if>
	       
				<if test="updateTime!=null">
					and UPDATE_TIME = #{updateTime}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_td_sales_one_by_one_to_wh 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_td_sales_one_by_one_to_wh 
		<include refid="ttdSalesOneByOneToWhDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_td_sales_one_by_one_to_wh 
		<include refid="ttdSalesOneByOneToWhDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="TtdSalesOneByOneToWhResult">
    	select <include refid="ttdSalesOneByOneToWhColumns" />
	    from t_td_sales_one_by_one_to_wh 
		<include refid="ttdSalesOneByOneToWhDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="TtdSalesOneByOneToWhResult">
    	select <include refid="ttdSalesOneByOneToWhColumns" />
	    from t_td_sales_one_by_one_to_wh 
		<include refid="ttdSalesOneByOneToWhDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="TtdSalesOneByOneToWhResult">
    	select <include refid="ttdSalesOneByOneToWhColumns" />
	    from t_td_sales_one_by_one_to_wh 
		<include refid="ttdSalesOneByOneToWhDynamicWhere"/>
		
    </select>

	
</mapper>
