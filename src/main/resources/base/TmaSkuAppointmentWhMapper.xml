<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="io.vitess.dao.sqlmap.TmaSkuAppointmentWhDao">
	<resultMap id="TmaSkuAppointmentWhResult" type="io.vitess.model.sqlmap.TmaSkuAppointmentWh">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="tmaSkuAppointmentWhColumns">
	    <![CDATA[
	        	ID as id,
	        	SHOP_ID as shopId,
	        	ACTIVITY_NAME as activityName,
	        	SKU_ID as skuId,
	        	ACTIVITY_STATUS as activityStatus,
	        	CREATE_USER_NO as createUserNo,
	        	SUSPEND_START_TIME as suspendStartTime,
	        	SUSPEND_END_TIME as suspendEndTime,
	        	CREATE_TIME as createTime,
	        	UPDATE_TIME as updateTime,
	        	UPDATE_USER_NO as updateUserNo,
	        	LOG_OFF_TYPE as logOffType,
	        	TO_WH_TIME as toWhTime,
	        	SKU_CODE as skuCode
	    ]]>
	</sql>

		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="io.vitess.model.sqlmap.TmaSkuAppointmentWh"
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_ma_sku_appointment_wh (
		        id,
		        	SHOP_ID ,
		        	ACTIVITY_NAME ,
		        	SKU_ID ,
		        	ACTIVITY_STATUS ,
		        	CREATE_USER_NO ,
		        	SUSPEND_START_TIME ,
		        	SUSPEND_END_TIME ,
		        	CREATE_TIME ,
		        	UPDATE_TIME ,
		        	UPDATE_USER_NO ,
		        	LOG_OFF_TYPE ,
		        	TO_WH_TIME ,
		        	SKU_CODE 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{shopId,javaType=Long,jdbcType=BIGINT} ,
		        	#{activityName,javaType=String,jdbcType=VARCHAR} ,
		        	#{skuId,javaType=Long,jdbcType=BIGINT} ,
		        	#{activityStatus,javaType=String,jdbcType=VARCHAR} ,
		        	#{createUserNo,javaType=String,jdbcType=VARCHAR} ,
		        	#{suspendStartTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{suspendEndTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{updateTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{updateUserNo,javaType=String,jdbcType=VARCHAR} ,
		        	#{logOffType,javaType=Integer,jdbcType=TINYINT} ,
		        	#{toWhTime,javaType=Integer,jdbcType=TINYINT} ,
		        	#{skuCode,javaType=String,jdbcType=VARCHAR} 
		        )
		    ]]>

		</insert>
		

		<update id="update" parameterType="io.vitess.model.sqlmap.TmaSkuAppointmentWh">
	    <![CDATA[
	        UPDATE t_ma_sku_appointment_wh SET
		        SHOP_ID = #{shopId,javaType=Long,jdbcType=BIGINT} ,
		        ACTIVITY_NAME = #{activityName,javaType=String,jdbcType=VARCHAR} ,
		        SKU_ID = #{skuId,javaType=Long,jdbcType=BIGINT} ,
		        ACTIVITY_STATUS = #{activityStatus,javaType=String,jdbcType=VARCHAR} ,
		        CREATE_USER_NO = #{createUserNo,javaType=String,jdbcType=VARCHAR} ,
		        SUSPEND_START_TIME = #{suspendStartTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        SUSPEND_END_TIME = #{suspendEndTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        CREATE_TIME = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        UPDATE_TIME = #{updateTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        UPDATE_USER_NO = #{updateUserNo,javaType=String,jdbcType=VARCHAR} ,
		        LOG_OFF_TYPE = #{logOffType,javaType=Integer,jdbcType=TINYINT} ,
		        TO_WH_TIME = #{toWhTime,javaType=Integer,jdbcType=TINYINT} ,
		        SKU_CODE = #{skuCode,javaType=String,jdbcType=VARCHAR} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_ma_sku_appointment_wh where
		        ID = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_ma_sku_appointment_wh 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="TmaSkuAppointmentWhResult" flushCache="false">
			select <include refid="tmaSkuAppointmentWhColumns" />
		    <![CDATA[
			    from t_ma_sku_appointment_wh 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="TmaSkuAppointmentWhResult" flushCache="false">
			select <include refid="tmaSkuAppointmentWhColumns" />
			    from t_ma_sku_appointment_wh 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="tmaSkuAppointmentWhDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and ID = #{id}
				</if>
	       
				<if test="shopId!=null">
					and SHOP_ID = #{shopId}
				</if>
	       
				<if test="activityName!=null">
					and ACTIVITY_NAME = #{activityName}
				</if>
	       
				<if test="skuId!=null">
					and SKU_ID = #{skuId}
				</if>
	       
				<if test="activityStatus!=null">
					and ACTIVITY_STATUS = #{activityStatus}
				</if>
	       
				<if test="createUserNo!=null">
					and CREATE_USER_NO = #{createUserNo}
				</if>
	       
				<if test="suspendStartTime!=null">
					and SUSPEND_START_TIME = #{suspendStartTime}
				</if>
	       
				<if test="suspendEndTime!=null">
					and SUSPEND_END_TIME = #{suspendEndTime}
				</if>
	       
				<if test="createTime!=null">
					and CREATE_TIME = #{createTime}
				</if>
	       
				<if test="updateTime!=null">
					and UPDATE_TIME = #{updateTime}
				</if>
	       
				<if test="updateUserNo!=null">
					and UPDATE_USER_NO = #{updateUserNo}
				</if>
	       
				<if test="logOffType!=null">
					and LOG_OFF_TYPE = #{logOffType}
				</if>
	       
				<if test="toWhTime!=null">
					and TO_WH_TIME = #{toWhTime}
				</if>
	       
				<if test="skuCode!=null">
					and SKU_CODE = #{skuCode}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_ma_sku_appointment_wh 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_ma_sku_appointment_wh 
		<include refid="tmaSkuAppointmentWhDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_ma_sku_appointment_wh 
		<include refid="tmaSkuAppointmentWhDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="TmaSkuAppointmentWhResult">
    	select <include refid="tmaSkuAppointmentWhColumns" />
	    from t_ma_sku_appointment_wh 
		<include refid="tmaSkuAppointmentWhDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="TmaSkuAppointmentWhResult">
    	select <include refid="tmaSkuAppointmentWhColumns" />
	    from t_ma_sku_appointment_wh 
		<include refid="tmaSkuAppointmentWhDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="TmaSkuAppointmentWhResult">
    	select <include refid="tmaSkuAppointmentWhColumns" />
	    from t_ma_sku_appointment_wh 
		<include refid="tmaSkuAppointmentWhDynamicWhere"/>
		
    </select>

	
</mapper>
