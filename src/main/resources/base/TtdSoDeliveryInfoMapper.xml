<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="io.vitess.dao.sqlmap.TtdSoDeliveryInfoDao">
	<resultMap id="TtdSoDeliveryInfoResult" type="io.vitess.model.sqlmap.TtdSoDeliveryInfo">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ttdSoDeliveryInfoColumns">
	    <![CDATA[
	        	SALES_ORDER_ID as id,
	        	COUNTRY as country,
	        	PROVINCE as province,
	        	CITY as city,
	        	DISTRICT as district,
	        	ADDRESS as address,
	        	ZIPCODE as zipcode,
	        	CONTACT_PERSON as contactPerson,
	        	RECEIVER as receiver,
	        	RECEIVER_PHONE as receiverPhone,
	        	RECEIVER_MOBILE as receiverMobile,
	        	MEMBER_EMAIL as memberEmail,
	        	TRANS_EXP_CODE as transExpCode,
	        	TRANS_NAME as transName,
	        	TRANS_SERVICE_TYPE as transServiceType,
	        	TRANS_TIME_TYPE as transTimeType,
	        	TRANS_NUMBER as transNumber,
	        	ACTUAL_TRANS_EXP_CODE as actualTransExpCode,
	        	ACTUAL_TRANS_NAME as actualTransName,
	        	ACTUAL_TRANS_NUMBER as actualTransNumber,
	        	REMARK as remark,
	        	COUNTRY_EN as countryEn,
	        	PROVINCE_EN as provinceEn,
	        	CITY_EN as cityEn,
	        	DISTRICT_EN as districtEn,
	        	ADDRESS_EN as addressEn,
	        	RECEIVER_EN as receiverEn,
	        	ZIPCODE_EN as zipcodeEn,
	        	REMARK_EN as remarkEn,
	        	STORE_CODE as storeCode,
	        	STORE_NAME as storeName,
	        	SHOP_ID as shopId,
	        	TRANS_BIG_WORD as transBigWord,
	        	PACKAGE_CENTER_CODE as packageCenterCode,
	        	EXPRESS_TYPE as expressType
	    ]]>
	</sql>

		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="io.vitess.model.sqlmap.TtdSoDeliveryInfo"
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_td_so_delivery_info (
		        id,
		        	COUNTRY ,
		        	PROVINCE ,
		        	CITY ,
		        	DISTRICT ,
		        	ADDRESS ,
		        	ZIPCODE ,
		        	CONTACT_PERSON ,
		        	RECEIVER ,
		        	RECEIVER_PHONE ,
		        	RECEIVER_MOBILE ,
		        	MEMBER_EMAIL ,
		        	TRANS_EXP_CODE ,
		        	TRANS_NAME ,
		        	TRANS_SERVICE_TYPE ,
		        	TRANS_TIME_TYPE ,
		        	TRANS_NUMBER ,
		        	ACTUAL_TRANS_EXP_CODE ,
		        	ACTUAL_TRANS_NAME ,
		        	ACTUAL_TRANS_NUMBER ,
		        	REMARK ,
		        	COUNTRY_EN ,
		        	PROVINCE_EN ,
		        	CITY_EN ,
		        	DISTRICT_EN ,
		        	ADDRESS_EN ,
		        	RECEIVER_EN ,
		        	ZIPCODE_EN ,
		        	REMARK_EN ,
		        	STORE_CODE ,
		        	STORE_NAME ,
		        	SHOP_ID ,
		        	TRANS_BIG_WORD ,
		        	PACKAGE_CENTER_CODE ,
		        	EXPRESS_TYPE 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{country,javaType=String,jdbcType=VARCHAR} ,
		        	#{province,javaType=String,jdbcType=VARCHAR} ,
		        	#{city,javaType=String,jdbcType=VARCHAR} ,
		        	#{district,javaType=String,jdbcType=VARCHAR} ,
		        	#{address,javaType=String,jdbcType=VARCHAR} ,
		        	#{zipcode,javaType=String,jdbcType=VARCHAR} ,
		        	#{contactPerson,javaType=String,jdbcType=VARCHAR} ,
		        	#{receiver,javaType=String,jdbcType=VARCHAR} ,
		        	#{receiverPhone,javaType=String,jdbcType=VARCHAR} ,
		        	#{receiverMobile,javaType=String,jdbcType=VARCHAR} ,
		        	#{memberEmail,javaType=String,jdbcType=VARCHAR} ,
		        	#{transExpCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{transName,javaType=String,jdbcType=VARCHAR} ,
		        	#{transServiceType,javaType=Integer,jdbcType=INTEGER} ,
		        	#{transTimeType,javaType=Integer,jdbcType=INTEGER} ,
		        	#{transNumber,javaType=String,jdbcType=VARCHAR} ,
		        	#{actualTransExpCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{actualTransName,javaType=String,jdbcType=VARCHAR} ,
		        	#{actualTransNumber,javaType=String,jdbcType=VARCHAR} ,
		        	#{remark,javaType=String,jdbcType=VARCHAR} ,
		        	#{countryEn,javaType=String,jdbcType=VARCHAR} ,
		        	#{provinceEn,javaType=String,jdbcType=VARCHAR} ,
		        	#{cityEn,javaType=String,jdbcType=VARCHAR} ,
		        	#{districtEn,javaType=String,jdbcType=VARCHAR} ,
		        	#{addressEn,javaType=String,jdbcType=VARCHAR} ,
		        	#{receiverEn,javaType=String,jdbcType=VARCHAR} ,
		        	#{zipcodeEn,javaType=String,jdbcType=VARCHAR} ,
		        	#{remarkEn,javaType=String,jdbcType=VARCHAR} ,
		        	#{storeCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{storeName,javaType=String,jdbcType=VARCHAR} ,
		        	#{shopId,javaType=Long,jdbcType=BIGINT} ,
		        	#{transBigWord,javaType=String,jdbcType=VARCHAR} ,
		        	#{packageCenterCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{expressType,javaType=String,jdbcType=VARCHAR} 
		        )
		    ]]>

		</insert>
		

		<update id="update" parameterType="io.vitess.model.sqlmap.TtdSoDeliveryInfo">
	    <![CDATA[
	        UPDATE t_td_so_delivery_info SET
		        COUNTRY = #{country,javaType=String,jdbcType=VARCHAR} ,
		        PROVINCE = #{province,javaType=String,jdbcType=VARCHAR} ,
		        CITY = #{city,javaType=String,jdbcType=VARCHAR} ,
		        DISTRICT = #{district,javaType=String,jdbcType=VARCHAR} ,
		        ADDRESS = #{address,javaType=String,jdbcType=VARCHAR} ,
		        ZIPCODE = #{zipcode,javaType=String,jdbcType=VARCHAR} ,
		        CONTACT_PERSON = #{contactPerson,javaType=String,jdbcType=VARCHAR} ,
		        RECEIVER = #{receiver,javaType=String,jdbcType=VARCHAR} ,
		        RECEIVER_PHONE = #{receiverPhone,javaType=String,jdbcType=VARCHAR} ,
		        RECEIVER_MOBILE = #{receiverMobile,javaType=String,jdbcType=VARCHAR} ,
		        MEMBER_EMAIL = #{memberEmail,javaType=String,jdbcType=VARCHAR} ,
		        TRANS_EXP_CODE = #{transExpCode,javaType=String,jdbcType=VARCHAR} ,
		        TRANS_NAME = #{transName,javaType=String,jdbcType=VARCHAR} ,
		        TRANS_SERVICE_TYPE = #{transServiceType,javaType=Integer,jdbcType=INTEGER} ,
		        TRANS_TIME_TYPE = #{transTimeType,javaType=Integer,jdbcType=INTEGER} ,
		        TRANS_NUMBER = #{transNumber,javaType=String,jdbcType=VARCHAR} ,
		        ACTUAL_TRANS_EXP_CODE = #{actualTransExpCode,javaType=String,jdbcType=VARCHAR} ,
		        ACTUAL_TRANS_NAME = #{actualTransName,javaType=String,jdbcType=VARCHAR} ,
		        ACTUAL_TRANS_NUMBER = #{actualTransNumber,javaType=String,jdbcType=VARCHAR} ,
		        REMARK = #{remark,javaType=String,jdbcType=VARCHAR} ,
		        COUNTRY_EN = #{countryEn,javaType=String,jdbcType=VARCHAR} ,
		        PROVINCE_EN = #{provinceEn,javaType=String,jdbcType=VARCHAR} ,
		        CITY_EN = #{cityEn,javaType=String,jdbcType=VARCHAR} ,
		        DISTRICT_EN = #{districtEn,javaType=String,jdbcType=VARCHAR} ,
		        ADDRESS_EN = #{addressEn,javaType=String,jdbcType=VARCHAR} ,
		        RECEIVER_EN = #{receiverEn,javaType=String,jdbcType=VARCHAR} ,
		        ZIPCODE_EN = #{zipcodeEn,javaType=String,jdbcType=VARCHAR} ,
		        REMARK_EN = #{remarkEn,javaType=String,jdbcType=VARCHAR} ,
		        STORE_CODE = #{storeCode,javaType=String,jdbcType=VARCHAR} ,
		        STORE_NAME = #{storeName,javaType=String,jdbcType=VARCHAR} ,
		        SHOP_ID = #{shopId,javaType=Long,jdbcType=BIGINT} ,
		        TRANS_BIG_WORD = #{transBigWord,javaType=String,jdbcType=VARCHAR} ,
		        PACKAGE_CENTER_CODE = #{packageCenterCode,javaType=String,jdbcType=VARCHAR} ,
		        EXPRESS_TYPE = #{expressType,javaType=String,jdbcType=VARCHAR} 
	        WHERE 
		        SALES_ORDER_ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_td_so_delivery_info where
		        SALES_ORDER_ID = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_td_so_delivery_info 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="TtdSoDeliveryInfoResult" flushCache="false">
			select <include refid="ttdSoDeliveryInfoColumns" />
		    <![CDATA[
			    from t_td_so_delivery_info 
		        where 
		        SALES_ORDER_ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="TtdSoDeliveryInfoResult" flushCache="false">
			select <include refid="ttdSoDeliveryInfoColumns" />
			    from t_td_so_delivery_info 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="ttdSoDeliveryInfoDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and SALES_ORDER_ID = #{id}
				</if>
	       
				<if test="country!=null">
					and COUNTRY = #{country}
				</if>
	       
				<if test="province!=null">
					and PROVINCE = #{province}
				</if>
	       
				<if test="city!=null">
					and CITY = #{city}
				</if>
	       
				<if test="district!=null">
					and DISTRICT = #{district}
				</if>
	       
				<if test="address!=null">
					and ADDRESS = #{address}
				</if>
	       
				<if test="zipcode!=null">
					and ZIPCODE = #{zipcode}
				</if>
	       
				<if test="contactPerson!=null">
					and CONTACT_PERSON = #{contactPerson}
				</if>
	       
				<if test="receiver!=null">
					and RECEIVER = #{receiver}
				</if>
	       
				<if test="receiverPhone!=null">
					and RECEIVER_PHONE = #{receiverPhone}
				</if>
	       
				<if test="receiverMobile!=null">
					and RECEIVER_MOBILE = #{receiverMobile}
				</if>
	       
				<if test="memberEmail!=null">
					and MEMBER_EMAIL = #{memberEmail}
				</if>
	       
				<if test="transExpCode!=null">
					and TRANS_EXP_CODE = #{transExpCode}
				</if>
	       
				<if test="transName!=null">
					and TRANS_NAME = #{transName}
				</if>
	       
				<if test="transServiceType!=null">
					and TRANS_SERVICE_TYPE = #{transServiceType}
				</if>
	       
				<if test="transTimeType!=null">
					and TRANS_TIME_TYPE = #{transTimeType}
				</if>
	       
				<if test="transNumber!=null">
					and TRANS_NUMBER = #{transNumber}
				</if>
	       
				<if test="actualTransExpCode!=null">
					and ACTUAL_TRANS_EXP_CODE = #{actualTransExpCode}
				</if>
	       
				<if test="actualTransName!=null">
					and ACTUAL_TRANS_NAME = #{actualTransName}
				</if>
	       
				<if test="actualTransNumber!=null">
					and ACTUAL_TRANS_NUMBER = #{actualTransNumber}
				</if>
	       
				<if test="remark!=null">
					and REMARK = #{remark}
				</if>
	       
				<if test="countryEn!=null">
					and COUNTRY_EN = #{countryEn}
				</if>
	       
				<if test="provinceEn!=null">
					and PROVINCE_EN = #{provinceEn}
				</if>
	       
				<if test="cityEn!=null">
					and CITY_EN = #{cityEn}
				</if>
	       
				<if test="districtEn!=null">
					and DISTRICT_EN = #{districtEn}
				</if>
	       
				<if test="addressEn!=null">
					and ADDRESS_EN = #{addressEn}
				</if>
	       
				<if test="receiverEn!=null">
					and RECEIVER_EN = #{receiverEn}
				</if>
	       
				<if test="zipcodeEn!=null">
					and ZIPCODE_EN = #{zipcodeEn}
				</if>
	       
				<if test="remarkEn!=null">
					and REMARK_EN = #{remarkEn}
				</if>
	       
				<if test="storeCode!=null">
					and STORE_CODE = #{storeCode}
				</if>
	       
				<if test="storeName!=null">
					and STORE_NAME = #{storeName}
				</if>
	       
				<if test="shopId!=null">
					and SHOP_ID = #{shopId}
				</if>
	       
				<if test="transBigWord!=null">
					and TRANS_BIG_WORD = #{transBigWord}
				</if>
	       
				<if test="packageCenterCode!=null">
					and PACKAGE_CENTER_CODE = #{packageCenterCode}
				</if>
	       
				<if test="expressType!=null">
					and EXPRESS_TYPE = #{expressType}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_td_so_delivery_info 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_td_so_delivery_info 
		<include refid="ttdSoDeliveryInfoDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_td_so_delivery_info 
		<include refid="ttdSoDeliveryInfoDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="TtdSoDeliveryInfoResult">
    	select <include refid="ttdSoDeliveryInfoColumns" />
	    from t_td_so_delivery_info 
		<include refid="ttdSoDeliveryInfoDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="TtdSoDeliveryInfoResult">
    	select <include refid="ttdSoDeliveryInfoColumns" />
	    from t_td_so_delivery_info 
		<include refid="ttdSoDeliveryInfoDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="TtdSoDeliveryInfoResult">
    	select <include refid="ttdSoDeliveryInfoColumns" />
	    from t_td_so_delivery_info 
		<include refid="ttdSoDeliveryInfoDynamicWhere"/>
		
    </select>

	
</mapper>
