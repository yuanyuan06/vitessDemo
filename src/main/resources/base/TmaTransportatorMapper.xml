<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="io.vitess.dao.sqlmap.TmaTransportatorDao">
	<resultMap id="TmaTransportatorResult" type="io.vitess.model.sqlmap.TmaTransportator">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="tmaTransportatorColumns">
	    <![CDATA[
	        	ID as id,
	        	CREATE_TIME as createTime,
	        	EXP_CODE as expCode,
	        	FULL_NAME as fullName,
	        	IS_SUPPORT_COD as isSupportCod,
	        	JASPER_NORMAL as jasperNormal,
	        	JASPER_ONLINE as jasperOnline,
	        	K3_CODE as k3Code,
	        	LAST_MODIFY_TIME as lastModifyTime,
	        	LIFE_CYCLE_STATUS as lifeCycleStatus,
	        	NAME as name,
	        	PLATFORM_CODE as platformCode,
	        	VERSION as version,
	        	QIMEN_CODE as qimenCode,
	        	PLATFORM_ID as platformId
	    ]]>
	</sql>

		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="io.vitess.model.sqlmap.TmaTransportator"
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_ma_transportator (
		        id,
		        	CREATE_TIME ,
		        	EXP_CODE ,
		        	FULL_NAME ,
		        	IS_SUPPORT_COD ,
		        	JASPER_NORMAL ,
		        	JASPER_ONLINE ,
		        	K3_CODE ,
		        	LAST_MODIFY_TIME ,
		        	LIFE_CYCLE_STATUS ,
		        	NAME ,
		        	PLATFORM_CODE ,
		        	VERSION ,
		        	QIMEN_CODE ,
		        	PLATFORM_ID 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{expCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{fullName,javaType=String,jdbcType=VARCHAR} ,
		        	#{isSupportCod,javaType=Integer,jdbcType=TINYINT} ,
		        	#{jasperNormal,javaType=String,jdbcType=VARCHAR} ,
		        	#{jasperOnline,javaType=String,jdbcType=VARCHAR} ,
		        	#{k3Code,javaType=String,jdbcType=VARCHAR} ,
		        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{lifeCycleStatus,javaType=Integer,jdbcType=INTEGER} ,
		        	#{name,javaType=String,jdbcType=VARCHAR} ,
		        	#{platformCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{version,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{qimenCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{platformId,javaType=String,jdbcType=VARCHAR} 
		        )
		    ]]>

		</insert>
		

		<update id="update" parameterType="io.vitess.model.sqlmap.TmaTransportator">
	    <![CDATA[
	        UPDATE t_ma_transportator SET
		        CREATE_TIME = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        EXP_CODE = #{expCode,javaType=String,jdbcType=VARCHAR} ,
		        FULL_NAME = #{fullName,javaType=String,jdbcType=VARCHAR} ,
		        IS_SUPPORT_COD = #{isSupportCod,javaType=Integer,jdbcType=TINYINT} ,
		        JASPER_NORMAL = #{jasperNormal,javaType=String,jdbcType=VARCHAR} ,
		        JASPER_ONLINE = #{jasperOnline,javaType=String,jdbcType=VARCHAR} ,
		        K3_CODE = #{k3Code,javaType=String,jdbcType=VARCHAR} ,
		        LAST_MODIFY_TIME = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        LIFE_CYCLE_STATUS = #{lifeCycleStatus,javaType=Integer,jdbcType=INTEGER} ,
		        NAME = #{name,javaType=String,jdbcType=VARCHAR} ,
		        PLATFORM_CODE = #{platformCode,javaType=String,jdbcType=VARCHAR} ,
		        VERSION = #{version,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        QIMEN_CODE = #{qimenCode,javaType=String,jdbcType=VARCHAR} ,
		        PLATFORM_ID = #{platformId,javaType=String,jdbcType=VARCHAR} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_ma_transportator where
		        ID = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_ma_transportator 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="TmaTransportatorResult" flushCache="false">
			select <include refid="tmaTransportatorColumns" />
		    <![CDATA[
			    from t_ma_transportator 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="TmaTransportatorResult" flushCache="false">
			select <include refid="tmaTransportatorColumns" />
			    from t_ma_transportator 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="tmaTransportatorDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and ID = #{id}
				</if>
	       
				<if test="createTime!=null">
					and CREATE_TIME = #{createTime}
				</if>
	       
				<if test="expCode!=null">
					and EXP_CODE = #{expCode}
				</if>
	       
				<if test="fullName!=null">
					and FULL_NAME = #{fullName}
				</if>
	       
				<if test="isSupportCod!=null">
					and IS_SUPPORT_COD = #{isSupportCod}
				</if>
	       
				<if test="jasperNormal!=null">
					and JASPER_NORMAL = #{jasperNormal}
				</if>
	       
				<if test="jasperOnline!=null">
					and JASPER_ONLINE = #{jasperOnline}
				</if>
	       
				<if test="k3Code!=null">
					and K3_CODE = #{k3Code}
				</if>
	       
				<if test="lastModifyTime!=null">
					and LAST_MODIFY_TIME = #{lastModifyTime}
				</if>
	       
				<if test="lifeCycleStatus!=null">
					and LIFE_CYCLE_STATUS = #{lifeCycleStatus}
				</if>
	       
				<if test="name!=null">
					and NAME = #{name}
				</if>
	       
				<if test="platformCode!=null">
					and PLATFORM_CODE = #{platformCode}
				</if>
	       
				<if test="version!=null">
					and VERSION = #{version}
				</if>
	       
				<if test="qimenCode!=null">
					and QIMEN_CODE = #{qimenCode}
				</if>
	       
				<if test="platformId!=null">
					and PLATFORM_ID = #{platformId}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_ma_transportator 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_ma_transportator 
		<include refid="tmaTransportatorDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_ma_transportator 
		<include refid="tmaTransportatorDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="TmaTransportatorResult">
    	select <include refid="tmaTransportatorColumns" />
	    from t_ma_transportator 
		<include refid="tmaTransportatorDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="TmaTransportatorResult">
    	select <include refid="tmaTransportatorColumns" />
	    from t_ma_transportator 
		<include refid="tmaTransportatorDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="TmaTransportatorResult">
    	select <include refid="tmaTransportatorColumns" />
	    from t_ma_transportator 
		<include refid="tmaTransportatorDynamicWhere"/>
		
    </select>

	
</mapper>
