<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="io.vitess.dao.sqlmap.TtdPlatformPromotionDao">
	<resultMap id="TtdPlatformPromotionResult" type="io.vitess.model.sqlmap.TtdPlatformPromotion">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ttdPlatformPromotionColumns">
	    <![CDATA[
	        	ID as id,
	        	SALES_ORDER_ID as salesOrderId,
	        	SALES_ORDER_LINE_ID as salesOrderLineId,
	        	SCOPE_TYPE as scopeType,
	        	PLATFORM_ORDER_CODE as platformOrderCode,
	        	PLATFORM_LINE_ID as platformLineId,
	        	PROMOTION_NAME as promotionName,
	        	GIFT_ITEM_NAME as giftItemName,
	        	DISCOUNT_FEE as discountFee,
	        	GIFT_ITEM_ID as giftItemId,
	        	GIFT_ITEM_NUM as giftItemNum,
	        	DESCRIPTION as description,
	        	PROMOTION_ID as promotionId,
	        	SHOP_ID as shopId
	    ]]>
	</sql>

		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="io.vitess.model.sqlmap.TtdPlatformPromotion"
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_td_platform_promotion (
		        id,
		        	SALES_ORDER_ID ,
		        	SALES_ORDER_LINE_ID ,
		        	SCOPE_TYPE ,
		        	PLATFORM_ORDER_CODE ,
		        	PLATFORM_LINE_ID ,
		        	PROMOTION_NAME ,
		        	GIFT_ITEM_NAME ,
		        	DISCOUNT_FEE ,
		        	GIFT_ITEM_ID ,
		        	GIFT_ITEM_NUM ,
		        	DESCRIPTION ,
		        	PROMOTION_ID ,
		        	SHOP_ID 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{salesOrderId,javaType=Long,jdbcType=BIGINT} ,
		        	#{salesOrderLineId,javaType=Long,jdbcType=BIGINT} ,
		        	#{scopeType,javaType=Integer,jdbcType=INTEGER} ,
		        	#{platformOrderCode,javaType=String,jdbcType=VARCHAR} ,
		        	#{platformLineId,javaType=Long,jdbcType=BIGINT} ,
		        	#{promotionName,javaType=String,jdbcType=VARCHAR} ,
		        	#{giftItemName,javaType=String,jdbcType=VARCHAR} ,
		        	#{discountFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        	#{giftItemId,javaType=String,jdbcType=VARCHAR} ,
		        	#{giftItemNum,javaType=Integer,jdbcType=INTEGER} ,
		        	#{description,javaType=String,jdbcType=VARCHAR} ,
		        	#{promotionId,javaType=String,jdbcType=VARCHAR} ,
		        	#{shopId,javaType=Long,jdbcType=BIGINT} 
		        )
		    ]]>

		</insert>
		

		<update id="update" parameterType="io.vitess.model.sqlmap.TtdPlatformPromotion">
	    <![CDATA[
	        UPDATE t_td_platform_promotion SET
		        SALES_ORDER_ID = #{salesOrderId,javaType=Long,jdbcType=BIGINT} ,
		        SALES_ORDER_LINE_ID = #{salesOrderLineId,javaType=Long,jdbcType=BIGINT} ,
		        SCOPE_TYPE = #{scopeType,javaType=Integer,jdbcType=INTEGER} ,
		        PLATFORM_ORDER_CODE = #{platformOrderCode,javaType=String,jdbcType=VARCHAR} ,
		        PLATFORM_LINE_ID = #{platformLineId,javaType=Long,jdbcType=BIGINT} ,
		        PROMOTION_NAME = #{promotionName,javaType=String,jdbcType=VARCHAR} ,
		        GIFT_ITEM_NAME = #{giftItemName,javaType=String,jdbcType=VARCHAR} ,
		        DISCOUNT_FEE = #{discountFee,javaType=java.math.BigDecimal,jdbcType=DECIMAL} ,
		        GIFT_ITEM_ID = #{giftItemId,javaType=String,jdbcType=VARCHAR} ,
		        GIFT_ITEM_NUM = #{giftItemNum,javaType=Integer,jdbcType=INTEGER} ,
		        DESCRIPTION = #{description,javaType=String,jdbcType=VARCHAR} ,
		        PROMOTION_ID = #{promotionId,javaType=String,jdbcType=VARCHAR} ,
		        SHOP_ID = #{shopId,javaType=Long,jdbcType=BIGINT} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_td_platform_promotion where
		        ID = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_td_platform_promotion 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="TtdPlatformPromotionResult" flushCache="false">
			select <include refid="ttdPlatformPromotionColumns" />
		    <![CDATA[
			    from t_td_platform_promotion 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="TtdPlatformPromotionResult" flushCache="false">
			select <include refid="ttdPlatformPromotionColumns" />
			    from t_td_platform_promotion 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="ttdPlatformPromotionDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and ID = #{id}
				</if>
	       
				<if test="salesOrderId!=null">
					and SALES_ORDER_ID = #{salesOrderId}
				</if>
	       
				<if test="salesOrderLineId!=null">
					and SALES_ORDER_LINE_ID = #{salesOrderLineId}
				</if>
	       
				<if test="scopeType!=null">
					and SCOPE_TYPE = #{scopeType}
				</if>
	       
				<if test="platformOrderCode!=null">
					and PLATFORM_ORDER_CODE = #{platformOrderCode}
				</if>
	       
				<if test="platformLineId!=null">
					and PLATFORM_LINE_ID = #{platformLineId}
				</if>
	       
				<if test="promotionName!=null">
					and PROMOTION_NAME = #{promotionName}
				</if>
	       
				<if test="giftItemName!=null">
					and GIFT_ITEM_NAME = #{giftItemName}
				</if>
	       
				<if test="discountFee!=null">
					and DISCOUNT_FEE = #{discountFee}
				</if>
	       
				<if test="giftItemId!=null">
					and GIFT_ITEM_ID = #{giftItemId}
				</if>
	       
				<if test="giftItemNum!=null">
					and GIFT_ITEM_NUM = #{giftItemNum}
				</if>
	       
				<if test="description!=null">
					and DESCRIPTION = #{description}
				</if>
	       
				<if test="promotionId!=null">
					and PROMOTION_ID = #{promotionId}
				</if>
	       
				<if test="shopId!=null">
					and SHOP_ID = #{shopId}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_td_platform_promotion 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_td_platform_promotion 
		<include refid="ttdPlatformPromotionDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_td_platform_promotion 
		<include refid="ttdPlatformPromotionDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="TtdPlatformPromotionResult">
    	select <include refid="ttdPlatformPromotionColumns" />
	    from t_td_platform_promotion 
		<include refid="ttdPlatformPromotionDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="TtdPlatformPromotionResult">
    	select <include refid="ttdPlatformPromotionColumns" />
	    from t_td_platform_promotion 
		<include refid="ttdPlatformPromotionDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="TtdPlatformPromotionResult">
    	select <include refid="ttdPlatformPromotionColumns" />
	    from t_td_platform_promotion 
		<include refid="ttdPlatformPromotionDynamicWhere"/>
		
    </select>

	
</mapper>
